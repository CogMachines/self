<!DOCTYPE html>


<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    
    <title>8.1. Building a VM</title>
    
    <link rel="stylesheet" href="_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" /> 
  </head>
  <body role="document">

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="building-a-vm">
<span id="id1"></span><h1>8.1. Building a VM</h1>
<blockquote>
<div>Last updated 3 February 2014 for Self 4.5.0</div></blockquote>
<p>The sources for the Self VM are on the <a class="reference external" href="https://github.com/russellallen/self">GitHub repository</a><span class="link-target"> [https://github.com/russellallen/self]</span>.</p>
<div class="section" id="requirements">
<h2>8.1.1. Requirements</h2>
<p>On Mac OS X you will need XCode, version 4 or higher, with the command line tools installed and <a class="reference external" href="http://www.cmake.org/">CMake</a><span class="link-target"> [http://www.cmake.org/]</span> in at least version 2.8. <a class="reference external" href="http://www.cmake.org/">CMake</a><span class="link-target"> [http://www.cmake.org/]</span> can be easily installed using the <a class="reference external" href="http://brew.sh">Brew</a><span class="link-target"> [http://brew.sh]</span> package manager.</p>
<p>On Linux you will generally need the appropriate libraries for Git, CMake, a GCC or Clang toolchain, X and Ncurses. For example, on Fedora 19 you will need: git cmake gcc gcc-c++ glibc-devel.i686 libstdc++-devel libstdc++-devel.i686 libX11-devel.i686 libXt-devel.i686 libXext-devel.i686 libXrender-devel.i686 libXau-devel.i686 libxcb-devel.i686 ncurses-devel.i686 ncurses-libs.i686</p>
<p>Self builds with <a class="reference external" href="http://gcc.gnu.org/">GCC</a><span class="link-target"> [http://gcc.gnu.org/]</span> ≥ 4.2 or <a class="reference external" href="http://clang.llvm.org/">Clang</a><span class="link-target"> [http://clang.llvm.org/]</span> ≥ 2.0.</p>
</div>
<div class="section" id="building">
<h2>8.1.2. Building</h2>
<p>You can do an in-tree build with:</p>
<div class="highlight-default"><div class="highlight"><pre><span></span><span class="n">cmake</span> <span class="o">.</span>
<span class="n">cmake</span> <span class="o">--</span><span class="n">build</span> <span class="o">.</span>
</pre></div>
</div>
<p>or an out-of-tree build with:</p>
<div class="highlight-default"><div class="highlight"><pre><span></span>mkdir -p $YOU_BUILD_DIRECTORY; cd $YOU_BUILD_DIRECTORY
cmake $DIRECTORY_OF_SELF_CHECKOUT
cmake --build $YOU_BUILD_DIRECTORY
</pre></div>
</div>
<p>CMake respects your environment variables, so to build Self with Clang, configure it like this:</p>
<div class="highlight-default"><div class="highlight"><pre><span></span>CC=clang CXX=clang++ cmake $DIRECTORY_OF_SELF_CHECKOUT
</pre></div>
</div>
<p>On Mac OS X with Xcode, you can use the Xcode generator of CMake like this:</p>
<div class="highlight-default"><div class="highlight"><pre><span></span>cmake -GXcode $DIRECTORY_OF_SELF_CHECKOUT
</pre></div>
</div>
<p>On 64bit Linux, you may want to explicitly use 32bit compilation:</p>
<div class="highlight-default"><div class="highlight"><pre><span></span>CC=&quot;gcc -m32&quot; CXX=&quot;g++ -m32&quot; cmake $DIRECTORY_OF_SELF_CHECKOUT
</pre></div>
</div>
<p>The same holds for Clang.</p>
<p>You may wish to use <code class="docutils literal"><span class="pre">ccmake</span></code> or the CMake GUI (<code class="docutils literal"><span class="pre">cmake-gui</span></code> or the CMake.app on OS X) to configure available features like Release/Debug/Profiled builds or to enable experimental features.</p>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>
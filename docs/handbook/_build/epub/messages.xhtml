<!DOCTYPE html>


<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    
    <title>4.8. Messages</title>
    
    <link rel="stylesheet" href="_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" /> 
  </head>
  <body role="document">

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="messages">
<h1>4.8. Messages</h1>
<p>Self allows messages to be manipulated as objects when convenient. For example, if an object
fails to understand a message, the object is notified of the problem via a message whose arguments
include the selector of the message that was not understood. While most objects inherit default
behavior for handling this situation (by halting with an error), it is sometimes convenient for an object
to handle the situation itself, perhaps by resending the message to some other object. Objects
that do this are called transparent forwarders. An example is given in <code class="docutils literal"><span class="pre">interceptor</span></code>.</p>
<p>A string has the basic ability to use itself as a message selector using the messages <code class="docutils literal"><span class="pre">sendTo</span></code>: (normal
message sends), <code class="docutils literal"><span class="pre">resendTo</span></code>: (resends), or <code class="docutils literal"><span class="pre">sendTo:DelegatingTo:</span></code> (delegated sends).
Each of these messages has a number of variations based on the number of arguments the message
has. For example, one would used <code class="docutils literal"><span class="pre">sendTo:With:With:</span></code> to send a message with <code class="docutils literal"><span class="pre">at:Put:</span></code> as the
selector and two arguments:</p>
<div class="highlight-default"><div class="highlight"><pre><span></span><span class="s1">&#39;at:Put:&#39;</span> <span class="n">sendTo</span><span class="p">:</span> <span class="n">aDict</span> <span class="n">With</span><span class="p">:</span> <span class="n">k</span> <span class="n">With</span><span class="p">:</span> <span class="n">v</span>
</pre></div>
</div>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Primitives such as <code class="docutils literal"><span class="pre">_Print</span></code> cannot be sent in the current system.</p>
</div>
<p>A selector, receiver, delegatee, methodHolder, and arguments can be bundled together in a <code class="docutils literal"><span class="pre">message</span></code>
object. The message gets <code class="docutils literal"><span class="pre">sent</span></code> when the message object receives the send message. Message
objects are used to describe delayed actions, such as the actions that should occur just before or after
a snapshot is read. They are also used as an argument to new process creation (you can create a
new process to execute the message by sending it <code class="docutils literal"><span class="pre">fork</span></code>).</p>
<p>Modules: sending, message, selector, interceptor</p>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>
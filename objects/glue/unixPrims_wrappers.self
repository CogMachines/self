" This information was generated by the primitive maker (primitiveMaker.self).
Please do not change it manually. -- dmu 12/91  "

" Copyright 1992-2012 AUTHORS.  "

" See the LICENSE file for license information.  "

globals unixGlobals os _AddSlots: ( |

{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: unixPrims_wrappers InitialContents: FollowSlot'

	}
{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: unixPrims_wrappers InitialContents: FollowSlot\x7fVisibility: private'

  basicOpenFileName: t0 Flags: t1 Mode: t2  = (

       basicOpenFileName: t0 Flags: t1 Mode: t2 IfFail: 
        [|:e| ^error: 'basicOpenFileName:Flags:Mode: failed: ', e] ).

  basicOpenFileName: t0 Flags: t1 Mode: t2 IfFail: fb = (
    |

    |

      t0 _open_wrapbasicOpenFileNameFlags: t1 Mode: t2 ResultProxy: 
        os_file deadCopy IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  t0 asVMByteVector _open_wrapbasicOpenFileNameFlags: t1 asSmallInteger Mode: 
                    t2 asSmallInteger ResultProxy: 
                    os_file deadCopy IfFail: fb 
           ]] ).


  basicSocketDomain: t0 Type: t1 Protocol: t2  = (

       basicSocketDomain: t0 Type: t1 Protocol: t2 IfFail: 
        [|:e| ^error: 'basicSocketDomain:Type:Protocol: failed: ', e] ).

  basicSocketDomain: t0 Type: t1 Protocol: t2 IfFail: fb = (
    |

    |

      t0 _socket_wrapbasicSocketDomainType: t1 Protocol: t2 
        ResultProxy: os_file deadCopy IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  t0 asSmallInteger _socket_wrapbasicSocketDomainType: t1 asSmallInteger 
                    Protocol: t2 asSmallInteger 
                    ResultProxy: os_file deadCopy IfFail: 
                    fb 
           ]] ).


  basicBindSocket: t0 Family: t1 Port: t2 Address: t3  = (

       basicBindSocket: t0 Family: t1 Port: t2 Address: t3 IfFail: 
        [|:e| ^error: 'basicBindSocket:Family:Port:Address: failed: ', e] ).

  basicBindSocket: t0 Family: t1 Port: t2 Address: t3 IfFail: 
    fb = (
    |

    |

      t0 _bind_wrapbasicBindSocketFamily: t1 Port: t2 Address: t3 
        IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  (t0 reviveIfFail: [|:e| ^ fb value: e]) _bind_wrapbasicBindSocketFamily: t1 asSmallInteger Port: 
                    t2 asSmallInteger Address: 
                    t3 asVMByteVector IfFail: fb 
           ]] ).


  basicConnectSocket: t0 Family: t1 Port: t2 Address: t3  = (

       basicConnectSocket: t0 Family: t1 Port: t2 Address: t3 
        IfFail: 
        [|:e| ^error: 'basicConnectSocket:Family:Port:Address: failed: ', e] ).

  basicConnectSocket: t0 Family: t1 Port: t2 Address: t3 
    IfFail: fb = (
    |

    |

      t0 _connect_wrapbasicConnectSocketFamily: t1 Port: t2 Address: 
        t3 IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  (t0 reviveIfFail: [|:e| ^ fb value: e]) _connect_wrapbasicConnectSocketFamily: t1 asSmallInteger 
                    Port: t2 asSmallInteger Address: 
                    t3 asVMByteVector IfFail: fb 
           ]] ).


  basicGetHostByAddr: t0 Type: t1  = (

       basicGetHostByAddr: t0 Type: t1 IfFail: 
        [|:e| ^error: 'basicGetHostByAddr:Type: failed: ', e] ).

  basicGetHostByAddr: t0 Type: t1 IfFail: fb = (
    |

    |

      t0 _gethostbyaddr_wrapbasicGetHostByAddrType: t1 IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  t0 asVMByteVector _gethostbyaddr_wrapbasicGetHostByAddrType: 
                    t1 asSmallInteger IfFail: fb 
           ]] ).


  basicGetHostByName: t0  = (

       basicGetHostByName: t0 IfFail: 
        [|:e| ^error: 'basicGetHostByName: failed: ', e] ).

  basicGetHostByName: t0 IfFail: fb = (
    |

    |

      t0 _gethostbyname_wrapbasicGetHostByNameIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  t0 asVMByteVector _gethostbyname_wrapbasicGetHostByNameIfFail: fb 
           ]] ).


  basicListenSocket: t0 Backlog: t1  = (

       basicListenSocket: t0 Backlog: t1 IfFail: 
        [|:e| ^error: 'basicListenSocket:Backlog: failed: ', e] ).

  basicListenSocket: t0 Backlog: t1 IfFail: fb = (
    |

    |

      t0 _listenbasicListenSocketBacklog: t1 IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  (t0 reviveIfFail: [|:e| ^ fb value: e]) _listenbasicListenSocketBacklog: t1 asSmallInteger IfFail: 
                    fb 
           ]] ).


  basicAcceptSocket: t0 Info: t1  = (

       basicAcceptSocket: t0 Info: t1 IfFail: 
        [|:e| ^error: 'basicAcceptSocket:Info: failed: ', e] ).

  basicAcceptSocket: t0 Info: t1 IfFail: fb = (
    |

    |

      t0 _accept_wrapbasicAcceptSocketInfo: t1 ResultProxy: 
        os_file deadCopy IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  (t0 reviveIfFail: [|:e| ^ fb value: e]) _accept_wrapbasicAcceptSocketInfo: t1 ResultProxy: 
                    os_file deadCopy IfFail: fb 
           ]] ).


  basicFcntlFile: t0 Request: t1 Arg: t2  = (

       basicFcntlFile: t0 Request: t1 Arg: t2 IfFail: 
        [|:e| ^error: 'basicFcntlFile:Request:Arg: failed: ', e] ).

  basicFcntlFile: t0 Request: t1 Arg: t2 IfFail: fb = (
    |

    |

      t0 _fcntlbasicFcntlFileRequest: t1 Arg: t2 IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  (t0 reviveIfFail: [|:e| ^ fb value: e]) _fcntlbasicFcntlFileRequest: t1 asSmallInteger Arg: 
                    t2 asSmallInteger IfFail: fb 
           ]] ).


  basicCloseFile: t0  = (

       basicCloseFile: t0 IfFail: 
        [|:e| ^error: 'basicCloseFile: failed: ', e] ).

  basicCloseFile: t0 IfFail: fb = (
    |

    |

      t0 _close_wrapbasicCloseFileIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  (t0 reviveIfFail: [|:e| ^ fb value: e]) _close_wrapbasicCloseFileIfFail: fb 
           ]] ).


  basicReadFile: t0 Into: t1 Offset: t2 Count: t3  = (

       basicReadFile: t0 Into: t1 Offset: t2 Count: t3 IfFail: 
        [|:e| ^error: 'basicReadFile:Into:Offset:Count: failed: ', e] ).

  basicReadFile: t0 Into: t1 Offset: t2 Count: t3 IfFail: fb = (
    |

    |

      t0 _read_wrapbasicReadFileInto: t1 Offset: t2 Count: t3 
        IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  (t0 reviveIfFail: [|:e| ^ fb value: e]) _read_wrapbasicReadFileInto: t1 asVMByteVector Offset: 
                    t2 asSmallInteger Count: 
                    t3 asSmallInteger IfFail: fb 
           ]] ).


  basicWriteFile: t0 Into: t1 Offset: t2 Count: t3  = (

       basicWriteFile: t0 Into: t1 Offset: t2 Count: t3 IfFail: 
        [|:e| ^error: 'basicWriteFile:Into:Offset:Count: failed: ', e] ).

  basicWriteFile: t0 Into: t1 Offset: t2 Count: t3 IfFail: fb = (
    |

    |

      t0 _write_wrapbasicWriteFileInto: t1 Offset: t2 Count: t3 
        IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  (t0 reviveIfFail: [|:e| ^ fb value: e]) _write_wrapbasicWriteFileInto: t1 asVMByteVector Offset: 
                    t2 asSmallInteger Count: 
                    t3 asSmallInteger IfFail: fb 
           ]] ).


  basicLseekFile: t0 Offset: t1 Whence: t2  = (

       basicLseekFile: t0 Offset: t1 Whence: t2 IfFail: 
        [|:e| ^error: 'basicLseekFile:Offset:Whence: failed: ', e] ).

  basicLseekFile: t0 Offset: t1 Whence: t2 IfFail: fb = (
    |

    |

      t0 _lseekbasicLseekFileOffset: t1 Whence: t2 IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  (t0 reviveIfFail: [|:e| ^ fb value: e]) _lseekbasicLseekFileOffset: t1 asSmallInteger Whence: 
                    t2 asSmallInteger IfFail: fb 
           ]] ).


  basicSelectInto: t0 Size: t1  = (

       basicSelectInto: t0 Size: t1 IfFail: 
        [|:e| ^error: 'basicSelectInto:Size: failed: ', e] ).

  basicSelectInto: t0 Size: t1 IfFail: fb = (
    |

    |

      t0 _select_wrapbasicSelectIntoSize: t1 IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  t0 _select_wrapbasicSelectIntoSize: t1 asSmallInteger IfFail: 
                    fb 
           ]] ).


  basicSelectReadInto: t0 Size: t1  = (

       basicSelectReadInto: t0 Size: t1 IfFail: 
        [|:e| ^error: 'basicSelectReadInto:Size: failed: ', e] ).

  basicSelectReadInto: t0 Size: t1 IfFail: fb = (
    |

    |

      t0 _select_read_wrapbasicSelectReadIntoSize: t1 IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  t0 _select_read_wrapbasicSelectReadIntoSize: t1 asSmallInteger 
                    IfFail: fb 
           ]] ).


  basicUnlink: t0  = (

       basicUnlink: t0 IfFail: 
        [|:e| ^error: 'basicUnlink: failed: ', e] ).

  basicUnlink: t0 IfFail: fb = (
    |

    |

      t0 _unlinkbasicUnlinkIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  t0 asVMByteVector _unlinkbasicUnlinkIfFail: fb 
           ]] ).


	}
{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: unixPrims_wrappers InitialContents: FollowSlot\x7fVisibility: public'

  getpid = (

       getpidIfFail: [|:e| ^error: 'getpid failed: ', e] ).

  getpidIfFail: fb = (
    |

    |

      "ignored" _getpidIfFail: fb ).


	}
| )

traits unixFile _AddSlots: ( |

{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: unixPrims_wrappers InitialContents: FollowSlot'

	}
{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: unixPrims_wrappers InitialContents: FollowSlot\x7fVisibility: private'

  setFd: t0  = (

       setFd: t0 IfFail: [|:e| ^error: 'setFd: failed: ', e] ).

  setFd: t0 IfFail: fb = (
    |

    |

      t0 _MYSELFsetFdResultProxy: self IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  t0 asSmallInteger _MYSELFsetFdResultProxy: self IfFail: fb 
           ]] ).


	}
| )

traits unixFile _AddSlots: ( |

{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: unixPrims_wrappers InitialContents: FollowSlot'

  fileDescriptor = (

       fileDescriptorIfFail: 
        [|:e| ^error: 'fileDescriptor failed: ', e] ).

  fileDescriptorIfFail: fb = (
    |

    |

       _MYSELFfileDescriptorIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  ( reviveIfFail: [|:e| ^ fb value: e]) _MYSELFfileDescriptorIfFail: fb 
           ]] ).


	}
| )

traits unixFile _AddSlots: ( |

{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: unixPrims_wrappers InitialContents: FollowSlot'

	}
{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: unixPrims_wrappers InitialContents: FollowSlot\x7fVisibility: public'

  expand: t0  = (

       expand: t0 IfFail: [|:e| ^error: 'expand: failed: ', e] ).

  expand: t0 IfFail: fb = (
    |

    |

      t0 _ExpandDir_primexpandIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  t0 asVMByteVector _ExpandDir_primexpandIfFail: fb 
           ]] ).


  setsockoptLevel: t0 OptName: t1 OptVal: t2  = (

       setsockoptLevel: t0 OptName: t1 OptVal: t2 IfFail: 
        [|:e| ^error: 'setsockoptLevel:OptName:OptVal: failed: ', e] ).

  setsockoptLevel: t0 OptName: t1 OptVal: t2 IfFail: fb = (
    |

    |

       _setsockoptLevel: t0 OptName: t1 OptVal: t2 IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  ( reviveIfFail: [|:e| ^ fb value: e]) _setsockoptLevel: t0 asSmallInteger OptName: 
                    t1 asSmallInteger OptVal: 
                    t2 asVMByteVector IfFail: fb 
           ]] ).


	}
| )

globals unixGlobals os _AddSlots: ( |

{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: unixPrims_wrappers InitialContents: FollowSlot'

	}
{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: unixPrims_wrappers InitialContents: FollowSlot\x7fVisibility: public'

  command: t0  = (

       command: t0 IfFail: [|:e| ^error: 'command: failed: ', e] ).

  command: t0 IfFail: fb = (
    |

    |

      t0 _system_wrapcommandIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  t0 asVMByteVector _system_wrapcommandIfFail: fb 
           ]] ).


  environmentAt: t0  = (

       environmentAt: t0 IfFail: 
        [|:e| ^error: 'environmentAt: failed: ', e] ).

  environmentAt: t0 IfFail: fb = (
    |

    |

      t0 _getenvenvironmentAtIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  t0 asVMByteVector _getenvenvironmentAtIfFail: fb 
           ]] ).


  environmentAt: t0 Put: t1  = (

       environmentAt: t0 Put: t1 IfFail: 
        [|:e| ^error: 'environmentAt:Put: failed: ', e] ).

  environmentAt: t0 Put: t1 IfFail: fb = (
    |

    |

      t0 _putenv_wrapenvironmentAtPut: t1 IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  t0 asVMByteVector _putenv_wrapenvironmentAtPut: t1 asVMByteVector IfFail: fb 
           ]] ).


  getcwd = (

       getcwdIfFail: [|:e| ^error: 'getcwd failed: ', e] ).

  getcwdIfFail: fb = (
    |

    |

      "ignored" _getcwd_wrapgetcwdIfFail: fb ).


	}
| )

modules _AddSlots: ( |
	{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: unixPrims_wrappers InitialContents: FollowSlot\x7fVisibility: public'

		unixPrims_wrappers = ()
	}
| )

modules unixPrims_wrappers _AddSlots: (
	bootstrap remove: 'directory' From:
	bootstrap remove: 'fileInTimeString' From:
	bootstrap remove: 'myComment' From:
	bootstrap remove: 'postFileIn' From:
	bootstrap remove: 'revision' From:
	bootstrap remove: 'subpartNames' From:
	globals modules init copy) _AddSlots: ( |
	{} = 'Comment: This information was generated by the primitive maker (primitiveMaker.self).
Please do not change it manually. -- dmu 12/91 \x7fModuleInfo: Creator: globals modules unixPrims_wrappers.

CopyDowns:
globals modules init. copy 
SlotsToOmit: directory fileInTimeString myComment postFileIn revision subpartNames.

\x7fIsComplete: '.

	{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: unixPrims_wrappers InitialContents: InitializeToExpression: (_CurrentTimeString)\x7fVisibility: public'

		fileInTimeString <- _CurrentTimeString.
	}
	{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: unixPrims_wrappers InitialContents: FollowSlot'

		myComment <- '
		This information was generated by the primitive maker (primitiveMaker.self).
Please do not change it manually. -- dmu 12/91 .'.
	}
	{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: unixPrims_wrappers InitialContents: FollowSlot\x7fVisibility: public'

		directory <- 'glue'.
	}
	{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: unixPrims_wrappers InitialContents: FollowSlot\x7fVisibility: public'

		revision <- 'No revision; generated file'.
	}
	{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: unixPrims_wrappers InitialContents: FollowSlot\x7fVisibility: private'

		subpartNames <- ''.
	}
| )


